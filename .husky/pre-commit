#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# Executar linting
npm run lint:check

# Atualizar contagem de palavras
npm run wordcount

# Verificar se capítulos foram modificados
CHAPTER_CHANGES=$(git diff --cached --name-only | grep "chapters/.*\.md" || true)

if [ -n "$CHAPTER_CHANGES" ]; then
    echo "📚 Mudanças em capítulos detectadas. Verificando contexto..."
    
    # Verificar se CONTEXT.md foi atualizado
    CONTEXT_UPDATED=$(git diff --cached --name-only | grep "context/CONTEXT.md" || true)
    
    if [ -z "$CONTEXT_UPDATED" ]; then
        echo "❌ ERRO: Capítulo modificado mas contexto não atualizado!"
        echo "👉 Execute 'make session-end' antes de fazer commit"
        exit 1
    fi
    
    # Executar verificação de continuidade
    echo "🔍 Verificando continuidade..."
    python scripts/continuity-check.py
    
    # Verificar se há erros no relatório
    if [ -f "context/continuity-report.json" ]; then
        ERROR_COUNT=$(python -c "import json; data=json.load(open('context/continuity-report.json')); print(data['summary']['errors'])" 2>/dev/null || echo "0")
        
        if [ "$ERROR_COUNT" -gt "0" ]; then
            echo "❌ ERRO: Encontrados $ERROR_COUNT erros de continuidade!"
            echo "👉 Corrija os problemas e execute 'make session-end' novamente"
            python -c "import json; data=json.load(open('context/continuity-report.json')); [print(f\"  - {e['message']}\") for e in data['errors'][:5]]" 2>/dev/null
            exit 1
        fi
    fi
    
    echo "✅ Todas as verificações passaram!"
fi

# Adicionar arquivos modificados
git add chapters/*.md
git add context/*.json context/CONTEXT.md 2>/dev/null || true