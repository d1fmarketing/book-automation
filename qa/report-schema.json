{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "MCP QA Report Schema",
  "description": "Structured format for MCP visual QA results",
  "type": "object",
  "required": ["timestamp", "pdf", "html", "checks", "status", "exit_code"],
  "properties": {
    "timestamp": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp of QA run"
    },
    "pdf": {
      "type": "string",
      "description": "Path to PDF file that was tested"
    },
    "html": {
      "type": "string", 
      "description": "Path to HTML file that was tested"
    },
    "status": {
      "type": "string",
      "enum": ["passed", "failed"],
      "description": "Overall QA status"
    },
    "exit_code": {
      "type": "integer",
      "minimum": 0,
      "maximum": 1,
      "description": "0 for pass, 1 for fail"
    },
    "checks": {
      "type": "array",
      "description": "Individual check results",
      "items": {
        "type": "object",
        "required": ["name", "passed"],
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "font-size",
              "line-height", 
              "contrast-ratio",
              "blank-pages",
              "widows-orphans",
              "page-bleed",
              "page-count"
            ],
            "description": "Name of the check performed"
          },
          "passed": {
            "type": "boolean",
            "description": "Whether the check passed"
          },
          "details": {
            "type": "string",
            "description": "Additional details about the check result"
          },
          "actual_value": {
            "type": ["string", "number"],
            "description": "The actual value found (if applicable)"
          },
          "expected_range": {
            "type": "object",
            "properties": {
              "min": {"type": ["string", "number"]},
              "max": {"type": ["string", "number"]}
            },
            "description": "Expected range for the value"
          }
        }
      }
    },
    "failures": {
      "type": "array",
      "description": "Detailed failure information for debugging",
      "items": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["typography", "layout", "contrast", "geometry"],
            "description": "Category of failure"
          },
          "page": {
            "type": "integer",
            "description": "Page number where failure occurred"
          },
          "element": {
            "type": "string",
            "description": "CSS selector or element description"
          },
          "message": {
            "type": "string",
            "description": "Human-readable failure message"
          }
        }
      }
    },
    "screenshots": {
      "type": "array",
      "description": "Paths to screenshot files taken on failures",
      "items": {
        "type": "string"
      }
    },
    "suggestions": {
      "type": "object",
      "description": "Suggested adjustments for next iteration",
      "properties": {
        "font_adjustment": {
          "type": "string",
          "enum": ["increase", "decrease", "none"],
          "description": "Suggested font size adjustment"
        },
        "spacing_adjustment": {
          "type": "string", 
          "enum": ["tighter", "looser", "none"],
          "description": "Suggested line height/margin adjustment"
        },
        "layout_preset": {
          "type": "string",
          "description": "Suggested layout preset to try next"
        }
      }
    }
  }
}