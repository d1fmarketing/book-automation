name: Build eBook Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  PYTHON_VERSION: '3.9'
  PYTHONPATH: 'src'
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  IDEOGRAM_API_KEY: ${{ secrets.IDEOGRAM_API_KEY }}
  IMAGE_PROVIDER: 'ideogram'  # or 'openai'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: 🐍 Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: 📦 Install Python dependencies
      run: |
        set -euo pipefail
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
      env:
        PYTHONPATH: src
        
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install Node dependencies
      run: npm ci
      
    - name: 🧪 Run Python Tests
      run: |
        set -euo pipefail
        PYTHONPATH=src pytest -v tests/
      env:
        PYTHONPATH: src
        
    - name: 📊 Analyze Chapters
      run: |
        set -euo pipefail
        echo "📊 Analyzing all chapters..."
        python -m ebook_pipeline.context.analyzer
        echo "✅ Chapter analysis complete!"
        
    - name: 🔍 Check Continuity
      run: |
        set -euo pipefail
        echo "🔍 Running continuity checks..."
        python -m ebook_pipeline.context.continuity_checker
        echo "✅ All continuity checks passed!"
        
    - name: 🎨 Generate Images
      if: env.OPENAI_API_KEY != '' || env.IDEOGRAM_API_KEY != ''
      run: |
        set -euo pipefail
        echo "🎨 Generating AI images..."
        python -m ebook_pipeline.generators.generate_images --skip-existing
        echo "✅ Image generation complete!"
        
    - name: 📖 Build PDF
      run: |
        set -euo pipefail
        npm run build:pdf
        
    - name: 📚 Build EPUB
      run: |
        set -euo pipefail
        npm run build:epub
        npm run validate:epub
        
    - name: 📈 Word Count Report
      run: |
        set -euo pipefail
        python -m ebook_pipeline.utils.wordcount
        
    - name: 📦 Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ebook-build-${{ github.sha }}
        path: |
          build/dist/*.pdf
          build/dist/*.epub
          context/continuity-report.json
          context/chapter-summaries.json
        retention-days: 30
        
  security-check:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: 🔐 Security Scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: 📤 Upload Security Results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'